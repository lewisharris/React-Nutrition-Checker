{"version":3,"sources":["components/images/pork.jpeg","components/NutritionalInfo.js","components/FoodInfo.js","components/MacroInfo.js","components/Card.js","components/SearchBar.js","components/Header.js","components/Loader.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NutritionalInfo","weight","this","props","carbs","Math","round","protein","fat","fibre","className","React","Component","FoodInfo","state","setWeight","bind","element","setState","target","value","calories","floor","totalCalories","style","textAlign","height","display","flexDirection","justifyContent","padding","margin","brand","food","onClick","switch","type","placeholder","onChange","MacroInfo","Card","side","changeCard","width","background","boxShadow","fontFamily","color","SearchBar","maxWidth","border","minWidth","flexGrow","fontSize","changeInput","getFood","headerStyle","backgroundImage","headerImage","backgroundPosition","backgroundSize","backgroundRepeat","mainHeaderContainerStyle","mainHeaderStyle","Margin","mainTextStyle","fontWeight","Header","Loader","Container","foodData","search","intro","content","loading","noresults","toggleIntro","preventDefault","query","URL","fetch","then","response","json","data","list","hints","map","item","catch","renderCards","filter","label","toLowerCase","indexOf","key","foodId","nutrients","ENERC_KCAL","PROCNT","FAT","CHOCDF","FIBTG","minHeight","flexWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.5bbdea80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pork.87ddb688.jpeg\";","import React from 'react';\nimport './NutritionalInfo.css'\n\nclass NutritionalInfo extends React.Component {\n\n    render(){\n        const weight = this.props.weight;\n        const carbs = Math.round(this.props.carbs * weight) / 100;\n        const protein =  Math.round(this.props.protein * weight) / 100;\n        const fat = Math.round(this.props.fat * weight) / 100;\n        const fibre = Math.round(this.props.fibre * weight) / 100;\n        \n        return(\n            <div className=\"nutri-container\">\n                <h2 className=\"nutri-head\">Nutritional Information</h2>\n                <div className=\"nutri-flex\">\n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Carb</h3>\n                        <p className=\"nutri-text\">{carbs}g</p>\n                    </div>\n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Protein</h3>\n                        <p className=\"nutri-text\">{protein}g</p>\n                    </div>\n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Fat</h3>\n                        <p className=\"nutri-text\">{fat}g</p>\n                    </div>\n                        <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Fibre</h3>\n                        <p className=\"nutri-text\">{fibre}g</p>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n};\n\nexport default NutritionalInfo;","import React from 'react';\nimport './cardStyle.css';\nimport NutritionalInfo from './NutritionalInfo';\n\nclass FoodInfo extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            weight:100\n        }\n        this.setWeight = this.setWeight.bind(this)\n    }\n    setWeight (element) {\n        this.setState(\n            {weight:element.target.value}\n        )\n    }\n\n    render(){\n            const foodStyle={\n                textAlign:'center',\n                height:'100%',\n                display:'flex',\n                flexDirection:'column',\n                justifyContent:'flex-end',\n                padding:0,\n                margin:0\n            }\n            const weight = this.state.weight;\n            const calories = Math.floor(this.props.calories);\n            const totalCalories = Math.floor(calories * weight ) / 100;\n\n        return(\n            <div style={foodStyle}>\n                <h2 className='food-header'>{this.props.brand} {this.props.food}</h2>\n                <h3>Calories per 100g</h3>\n                <p>{calories}Kcal</p>\n                <NutritionalInfo {...this.props}\n                                    weight={this.state.weight}\n                                    />\n                <p onClick={this.props.switch} className='flip-btn'>See Macros</p>\n                <div className='weight-input-container'>\n                    <label className='weight-label'>Change Amount (g):</label>\n                    <input type='number' className='weight-input' value={this.state.weight} placeholder='100' onChange={this.setWeight}></input>\n                </div>\n                <p>Total Calories: {totalCalories}Kcal</p>\n            </div>\n        )\n    }\n}\n\nexport default FoodInfo;","import React from 'react';\nimport './cardStyle.css';\nimport './NutritionalInfo.css'\n\nclass MacroInfo extends React.Component {\n    \n    render () {\n\n        const carbs = Math.floor(this.props.carbs);\n        const protein = Math.floor(this.props.protein);\n        const fat = Math.floor(this.props.fat);\n        const fibre = Math.floor(this.props.fibre);\n\n        return (\n            <div className=\"nutri-container\">\n                <h2 className='food-header'>{this.props.brand} {this.props.food}</h2>\n                <h3 className=\"nutri-head\">Macros</h3>  \n                <div className=\"nutri-flex\">\n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Carbs</h3>\n                        <p className=\"nutri-text\">{carbs}%</p>\n                    </div> \n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Protein</h3>\n                        <p className=\"nutri-text\">{protein}%</p>\n                    </div> \n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Fat</h3>\n                        <p className=\"nutri-text\">{fat}%</p>\n                    </div>\n                    <div className=\"nutri-segment\">\n                        <h3 className=\"nutri-header\">Fibre</h3>\n                        <p className=\"nutri-text\">{fibre}%</p>\n                    </div>\n                </div> \n                <p onClick={this.props.switch} className='flip-btn'>See Nutrition</p>\n            </div>\n        )\n    }\n}\n\nexport default MacroInfo;","import React from 'react';\nimport FoodInfo from './FoodInfo';\nimport MacroInfo from './MacroInfo';\n\nclass Card extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            side:'front'\n        }\n        this.changeCard = this.changeCard.bind(this)\n    }\n\n    changeCard(){\n           this.state.side === 'front' ?\n           this.setState(\n               {side:'back'}\n           )\n           :\n           this.setState(\n               {side:'front'}\n           )\n    }\n\n    render(){\n       const style= {\n            width:'300px',\n            background:'#336699',\n            margin:'10px',\n            boxShadow: '0px 0px 20px rgba(0,0,0,0.4)',\n            fontFamily:'sans-serif',\n            color:'#FAFBFB',\n            textAlign:'center',\n            display:'flex',\n            flexDirection:'column',\n            padding:0,\n            \n        }\n\n        return(\n            <div style={style}>\n                {this.state.side === 'front'?\n                <FoodInfo switch={this.changeCard} {...this.props}/>\n                :\n                <MacroInfo switch={this.changeCard} {...this.props}/>\n        }\n            </div>\n        )\n    }\n};\n\n\nexport default Card;","import React from 'react';\n\nclass SearchBar extends React.Component {\n\n    render(){\n        const searchBarStyle = {\n            maxWidth:'800px',\n            height:40,\n            margin:'5px auto',\n            display:'flex',\n            flexDirection:'row',\n            border:'solid 2px #2F6690'\n        }\n        const inputStyle = {\n            height:'100%',\n            padding:'0px 10px',\n            border:'none',\n            minWidth:150,\n            background:'#white',\n            color:'#000',\n            flexGrow:2,\n            fontSize:18,\n        }\n        const submitStyle = {\n            minWidth:100,\n            maxWidth:400,\n            border:'none',\n            background:'#2F6690',\n            color:'#EBF5DF'\n        }\n        return(\n            <form style={searchBarStyle}>\n                <input style={inputStyle} placeholder='Search Food' onChange={this.props.changeInput}></input>\n                <button style={submitStyle} onClick={this.props.getFood} type='submit'>Search</button>\n            </form>\n        )\n    }\n}\n\nexport default SearchBar","import React from 'react';\nimport headerImage from \"./images/pork.jpeg\";\n\nconst headerStyle = {\n    color:'#0D3B66',\n    textAlign:'center',\n    padding:20,\n    backgroundImage: `url(${headerImage})`,\n    backgroundPosition:'center',\n    backgroundSize:'cover',\n    backgroundRepeat:'no-repeat',\n    height:300\n}\n\nconst mainHeaderContainerStyle = {\n    maxWidth:700,\n    background:'rgb(255,255,255, 0.7)',\n    margin:'0px auto',\n}\n\nconst mainHeaderStyle = {\n    fontSize:50,\n    Margin:'0px auto',\n    textAlign:'center',\n    color:'#2F6690',\n    padding: '20px 20px 0px 20px'\n}\n\nconst mainTextStyle = {\n    fontSize:16,\n    Margin:'0px auto',\n    textAlign:'center',\n    color:'#2F6690',\n    padding: '20px 20px',\n    fontWeight:'lighter'\n}\n\nfunction Header () {\n    return <div style = {headerStyle}>\n                <div style={mainHeaderContainerStyle}>\n                    <h1 style={mainHeaderStyle}>Nutrition Checker</h1>\n                    <p style={mainTextStyle}>Enter keyword below to find required food</p>\n                </div>\n    \n            </div>\n}\n\nexport default Header;","import React from 'react';\nimport './LoaderStyle.scss';\n\nconst Loader = () => {\n    return(\n        <div className=\"loader\">\n            <div className=\"circle-one\"></div>\n            <div className=\"circle-two\"></div>\n            <div className=\"circle-three\"></div>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react';\nimport Card from './Card';\nimport SearchBar from './SearchBar';\nimport Header from './Header';\nimport Loader from './Loader';\n\nclass Container extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            foodData: [],\n            search:'',\n            intro:true,\n            content:false,\n            loading:false,\n            noresults:false\n        }\n        this.changeInput = this.changeInput.bind(this);\n        this.getFood = this.getFood.bind(this);\n        this.toggleIntro = this.toggleIntro.bind(this)\n    };\n\n    toggleIntro(element){\n        element.preventDefault();\n        this.getFood(element);\n        this.setState(\n            {intro:false},\n            {content:true}\n        )\n    }\n\n    //change the state of this Container component to update the search state to the search bar\n    changeInput (element) {\n        this.setState(\n            {search:element.target.value}\n            )\n    }\n\n    //API calls \n    async getFood (element) {\n        element.preventDefault();\n            const APP_ID = '5bff40af';\n            const APP_KEY = '1d837e056b1d1782ce34af7628d5005f';\n            const query = this.state.search;\n            const URL = `https://api.edamam.com/api/food-database/parser?nutrition-type=logging&ingr=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n            if(query !== ''){\n                this.setState({noresults:false})\n                this.setState({loading:true})\n                await fetch(URL)\n                    .then(response => {return response.json()})\n                    .then(data => {\n                        const list = data.hints.map(item => {return item})\n                        this.setState({foodData: list});\n                        this.setState({loading:false})\n                    })\n                    .catch( () => {\n                        this.setState({loading:false})\n                        this.setState({noresults:true})\n                        }\n                        )\n                this.setState({search:''})\n            }\n    };\n\n    render(){\n        //Styling\n        const containerStyle = {\n            background:'#FAFBFB',\n            margin:'0px auto',\n            minHeight:'100vh',\n        }\n\n        const cardContainerStyle = {\n            display:'flex',\n            flexDirection:'row',\n            flexWrap:'wrap',\n            justifyContent:'center',\n            margin:'30px auto',\n            width:'100%'\n        }\n\n        const noResultsStyle = {\n            margin: '30px auto',\n            fontSize:'24px',\n            color:'#0D3B66',\n            textAlign:'center'\n        }\n        \n        //Filter the list of foods to match the value of the input field and return into new array\n        let filteredFood = this.state.foodData.filter(item => {\n            return item.food.label.toLowerCase().indexOf(this.state.search) !== -1;\n        });\n\n        //render the cards with props\n        const renderCards = filteredFood.map(item => {\n            return <Card\n                    key={item.food.foodId}\n                    brand={item.food.brand}\n                     food = {item.food.label}\n                     calories = {item.food.nutrients.ENERC_KCAL}\n                     protein = {item.food.nutrients.PROCNT}\n                     fat = {item.food.nutrients.FAT}\n                     carbs = {item.food.nutrients.CHOCDF}\n                     fibre = {item.food.nutrients.FIBTG}\n                    />\n            })\n\n        return(\n            <div style={containerStyle}>\n                    <Header/>\n                    <SearchBar  changeInput = {this.changeInput}\n                                getFood = {this.getFood}/>\n\n                    {(this.state.loading? <Loader/> : null)}\n                    {(this.state.noresults? <div style={noResultsStyle}>No Results</div> : null)}\n\n\n                    <div style={cardContainerStyle}>\n                        {renderCards}\n                    </div>\n\n\n            </div>\n\n        )\n    }\n};\n\nexport default Container;\n","import React from 'react';\nimport Container from './components/Container';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}